import Image from "next/image";
import { Inter } from "next/font/google";
import Head from "next/head";
const inter = Inter({ subsets: ["latin"] });
import Product from "@/models/Product";
import mongoose from "mongoose";
import Link from "next/link";

export default function Home({ products, products1, products2, products3 }) {
  return (

    <main
      className={`flex flex-col ${inter.className}`}
    >
      <Head>
        <title>Codesware.com - Ware the Code</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="pallax">
        <div className="parallaxinner">

        </div>
      </div>

      <div className="container px-5 min-h-full py-24 mx-auto">
        <div className="flex flex-wrap -m-4">
          {Object.keys(products).map((item) => {

            return <div className="lg:w-1/5 md:w-1/2 p-4 w-full shadow-lg cursor-pointer">
              <Link key={products[item]._id} href={`/product/${products[item].slug}`} className='block relative  rounded overflow-hidden'>
                <img alt="ecommerce" className="m-auto justify-center md:h[34vh] h-[30vh] block" src={products[item].img} />

                <div className="mt-4 mx-2 text-center md:text-left">
                  <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">{products[item].category}</h3>
                  <h2 className="text-gray-900 title-font text-lg font-medium">{products[item].title}</h2>
                  <p className="mt-1">₹{products[item].price}.00</p>
                  <p className="mt-1 ">
                    {products[item].size.includes("S") && <span className='border px-1 border-grey-400 mx-1'>S</span>}
                    {products[item].size.includes("M") && <span className='border px-1 border-grey-400 mx-1'>M</span>}
                    {products[item].size.includes("L") && <span className='border px-1 border-grey-400 mx-1'>L</span>}
                    {products[item].size.includes("Xl") && <span className='border px-1 border-grey-400 mx-1'>XL</span>}
                    {products[item].size.includes("XXl") && <span className='border px-1 border-grey-400 mx-1'>XXL</span>}</p>
                </div>
                <div className="mt-1 text-center md:text-left">
                  {products[item].color.includes("red") && <button className="border-2 border-gray-300 ml-1 bg-red-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("green") && <button className="border-2 border-gray-300 ml-1 bg-green-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("purple") && <button className="border-2 border-gray-300 ml-1 bg-purple-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("white") && <button className="border-2 border-gray-300 ml-1 bg-white rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("black") && <button className="border-2 border-gray-300 ml-1 bg-black rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("yellow") && <button className="border-2 border-gray-300 ml-1 bg-yellow-500 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("blue") && <button className="border-2 border-gray-300 ml-1 bg-blue-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products[item].color.includes("pink") && <button className="border-2 border-gray-300 ml-1 bg-pink-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  
                </div>
              </Link>

            </div>
          })}

        </div>
      </div>

      <div className="pallax2">
        <div className="parallaxinner">

        </div>
      </div>

      <div className="container px-5 py-24 mx-auto">
        <div className="flex flex-wrap -m-4">
          {Object.keys(products1).map((item) => {
            return <div key={products1[item]._id} className="lg:w-1/5 md:w-1/2 p-4 w-full shadow-lg cursor-pointer">
              <Link href={`/product/${products1[item].slug}`} className='block relative  rounded overflow-hidden'>
                <img alt="ecommerce" className="m-auto justify-center md:h[34vh] h-[30vh] block" src={products1[item].img} />

                <div className="mt-4 mx-2 text-center md:text-left">
                  <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">Hoodies</h3>
                  <h2 className="text-gray-900 title-font text-lg font-medium">{products1[item].title}</h2>
                  <p className="mt-1">₹{products1[item].price}.00</p>
                  <p className="mt-1">
                    {products1[item].size.includes("S") && <span className='border px-1 border-grey-400 mx-1'>S</span>}
                    {products1[item].size.includes("M") && <span className='border px-1 border-grey-400 mx-1'>M</span>}
                    {products1[item].size.includes("L") && <span className='border px-1 border-grey-400 mx-1'>L</span>}
                    {products1[item].size.includes("Xl") && <span className='border px-1 border-grey-400 mx-1'>XL</span>}
                    {products1[item].size.includes("XXl") && <span className='border px-1 border-grey-400 mx-1'>XXL</span>}</p>
                </div>
                <div className="mt-1">
                {products1[item].color.includes("yellow") && <button className="border-2 border-gray-300 ml-1 bg-yellow-500 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("red") && <button className="border-2 border-gray-300 ml-1 bg-red-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("green") && <button className="border-2 border-gray-300 ml-1 bg-green-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("purple") && <button className="border-2 border-gray-300 ml-1 bg-purple-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("white") && <button className="border-2 border-gray-300 ml-1 bg-white rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("black") && <button className="border-2 border-gray-300 ml-1 bg-black rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("blue") && <button className="border-2 border-gray-300 ml-1 bg-blue-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products1[item].color.includes("pink") && <button className="border-2 border-gray-300 ml-1 bg-pink-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                </div>
              </Link>
            </div>
          })}
        </div>
      </div>

      <div className="pallax3">
        <div className="parallaxinner">

        </div>
      </div>

      <div className="container px-5 py-24 mx-auto">
        <div className="flex flex-wrap -m-4">
          {Object.keys(products2).length === 0 && <p>Sorry Mugs are Unavialable</p>}
          {Object.keys(products2).map((item) => {
            return <div key={products2[item]._id} className="lg:w-1/5 md:w-1/2 p-4 w-full shadow-lg cursor-pointer">
              <Link href={`/product/${products2[item].slug}`} className='block relative  rounded overflow-hidden'>
                <img alt="ecommerce" className="m-auto justify-center md:h[34vh] h-[30vh] block" src={products2[item].img} />

                <div className="mt-4 mx-2 text-center md:text-left">
                  <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">Accessories</h3>
                  <h2 className="text-gray-900 title-font text-lg font-medium">{products2[item].title}</h2>
                  <p className="mt-1">₹{products2[item].price}.00</p>
                  <p className="mt-1">
                    {products2[item].size.includes("S") && <span className='border px-1 border-grey-400 mx-1'>S</span>}
                    {products2[item].size.includes("M") && <span className='border px-1 border-grey-400 mx-1'>M</span>}
                    {products2[item].size.includes("L") && <span className='border px-1 border-grey-400 mx-1'>L</span>}
                    {products2[item].size.includes("Xl") && <span className='border px-1 border-grey-400 mx-1'>XL</span>}
                    {products2[item].size.includes("XXl") && <span className='border px-1 border-grey-400 mx-1'>XXL</span>}</p>
                </div>
                <div className="mt-1">
                  {products2[item].color.includes("red") && <button className="border-2 border-gray-300 ml-1 bg-red-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products2[item].color.includes("green") && <button className="border-2 border-gray-300 ml-1 bg-green-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products2[item].color.includes("purple") && <button className="border-2 border-gray-300 ml-1 bg-purple-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products2[item].color.includes("white") && <button className="border-2 border-gray-300 ml-1 bg-white rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products2[item].color.includes("black") && <button className="border-2 border-gray-300 ml-1 bg-black rounded-full w-6 h-6 focus:outline-none"></button>}
                </div>
              </Link>
            </div>
          })}
        </div>
      </div>

      <div className="pallax4">
        <div className="parallaxinner">

        </div>
      </div>

      <div className="container px-5 py-24 mx-auto">
        <div className="flex flex-wrap -m-4">
          {Object.keys(products3).length === 0 && <p>Sorry Mugs are Unavialable</p>}
          {Object.keys(products3).map((item) => {
            return <div key={products3[item]._id} className="lg:w-1/5 md:w-1/2 p-4 w-full shadow-lg cursor-pointer">
              <Link href={`/product/${products3[item].slug}`} className='block relative  rounded overflow-hidden'>
                <img alt="ecommerce" className="m-auto justify-center md:h[34vh] h-[30vh] block" src={products3[item].img} />

                <div className="mt-4 mx-2 text-center md:text-left">
                  <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">Pants</h3>
                  <h2 className="text-gray-900 title-font text-lg font-medium">{products3[item].title}</h2>
                  <p className="mt-1">₹{products3[item].price}.00</p>
                  <p className="mt-1">
                    {products3[item].size.includes("S") && <span className='border px-1 border-grey-400 mx-1'>S</span>}
                    {products3[item].size.includes("M") && <span className='border px-1 border-grey-400 mx-1'>M</span>}
                    {products3[item].size.includes("L") && <span className='border px-1 border-grey-400 mx-1'>L</span>}
                    {products3[item].size.includes("Xl") && <span className='border px-1 border-grey-400 mx-1'>Xl</span>}
                    {products3[item].size.includes("XXl") && <span className='border px-1 border-grey-400 mx-1'>XXl</span>}</p>
                </div>
                <div className="mt-1">
                  {products3[item].color.includes("red") && <button className="border-2 border-gray-300 ml-1 bg-red-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("blue") && <button className="border-2 border-gray-300 ml-1 bg-blue-900 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("grey") && <button className="border-2 border-gray-300 ml-1 bg-gray-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("pink") && <button className="border-2 border-gray-300 ml-1 bg-pink-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("green") && <button className="border-2 border-gray-300 ml-1 bg-green-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("purple") && <button className="border-2 border-gray-300 ml-1 bg-purple-600 rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("white") && <button className="border-2 border-gray-300 ml-1 bg-white rounded-full w-6 h-6 focus:outline-none"></button>}
                  {products3[item].color.includes("black") && <button className="border-2 border-gray-300 ml-1 bg-black rounded-full w-6 h-6 focus:outline-none"></button>}
                </div>
              </Link>
            </div>
          })}
        </div>
      </div>

      <div className="pallax5">
        <div className="parallaxinner">

        </div>
      </div>







    </main>
  );
}



export async function getServerSideProps(context) {
  if (!mongoose.connections[0].readyState) {

    await mongoose.connect(process.env.MONGO_URI)
  }


  let products = await Product.find({ category: "Tshirts" })
  let Tshirts = {};

  let products1 = await Product.find({ category: "Hoodies" })
  let Hoodies = {};

  let products2 = await Product.find({ category: "Mugs" })
  let Mugs = {};

  let products3 = await Product.find({ category: "Pants" })
  let Pants = {};

  for (const item of products3) {
    if (item.title in Pants) {
      if (!Pants[item.title].color.includes(item.color) && item.availableQty > 0) {
        Pants[item.title].color.push(item.color)
      }
      if (!Pants[item.title].size.includes(item.size) && item.availableQty > 0) {
        Pants[item.title].size.push(item.size)
      }

    }

    else {
      Pants[item.title] = JSON.parse(JSON.stringify(item))
      if (item.availableQty > 0) {
        Pants[item.title].color = [item.color]
        Pants[item.title].size = [item.size]
      }
    }
  }
  for (const item of products) {
    if (item.title in Tshirts) {
      if (!Tshirts[item.title].color.includes(item.color) && item.availableQty > 0) {
        Tshirts[item.title].color.push(item.color)
      }
      if (!Tshirts[item.title].size.includes(item.size) && item.availableQty > 0) {
        Tshirts[item.title].size.push(item.size)
      }

    }

    else {
      Tshirts[item.title] = JSON.parse(JSON.stringify(item))
      if (item.availableQty > 0) {
        Tshirts[item.title].color = [item.color]
        Tshirts[item.title].size = [item.size]
      }
      else {
        Tshirts[item.title].color = []
        Tshirts[item.title].size = []
      }
    }
  }
  for (const item of products2) {
    if (item.title in Mugs) {
      if (!Mugs[item.title].color.includes(item.color) && item.availableQty > 0) {
        Mugs[item.title].color.push(item.color)
      }
      if (!Mugs[item.title].size.includes(item.size) && item.availableQty > 0) {
        Mugs[item.title].size.push(item.size)
      }

    }

    else {
      Mugs[item.title] = JSON.parse(JSON.stringify(item))
      if (item.availableQty > 0) {
        Mugs[item.title].color = [item.color]
        Mugs[item.title].size = [item.size]
      }
    }
  }

  for (const item of products1) {
    if (item.title in Hoodies) {
      if (!Hoodies[item.title].color.includes(item.color) && item.availableQty > 0) {
        Hoodies[item.title].color.push(item.color)
      }
      if (!Hoodies[item.title].size.includes(item.size) && item.availableQty > 0) {
        Hoodies[item.title].size.push(item.size)
      }

    }

    else {
      Hoodies[item.title] = JSON.parse(JSON.stringify(item))
      if (item.availableQty > 0) {
        Hoodies[item.title].color = [item.color]
        Hoodies[item.title].size = [item.size]
      }
    }
  }
  return {
    props: { products3: JSON.parse(JSON.stringify(Pants)), products: JSON.parse(JSON.stringify(Tshirts)), products2: JSON.parse(JSON.stringify(Mugs)), products1: JSON.parse(JSON.stringify(Hoodies)) }, // will be passed to the page component as props
  }
}
